{"version":3,"sources":["components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collection-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreview","title","items","history","className","to","toLowerCase","toUpperCase","filter","item","i","map","key","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherProps","isLoading","selectIsCollectionFitching","CollectionOverviewContainer","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","dispatch","addItem","name","price","imageUrl","style","backgroundImage","onClick","inverted"],"mappings":"qQAuBeA,EAjBW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,EAAiBC,QAAjB,OACtB,yBAAKC,UAAU,cACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWJ,EAAMK,gBACrB,wBAAIF,UAAU,SAASH,EAAMM,gBAEjC,yBAAKH,UAAU,mBACVF,EACIM,QAAO,SAACC,EAAMC,GAAP,OAAaA,EAAI,KACxBC,KAAI,SAACF,GAAD,OACD,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,UCElDK,EAAkBC,YAAyB,CAC7CC,YAAaC,MAIFC,cAAQJ,EAARI,EAba,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACxB,yBAAKZ,UAAU,uBACVY,EAAYL,KAAI,gBAAGE,EAAH,EAAGA,GAAOM,EAAV,6BACb,kBAAC,EAAD,eAAmBP,IAAKC,GAAQM,WCJtCL,EAAkBC,YAAyB,CAC7CK,UAAWC,MAGTC,EAA8BC,YAChCL,YAAQJ,GACRU,IAFgCD,CAG/BE,GAGUH,a,gCClBf,oJAGMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKZ,eAGJC,EAA8Ba,YACvC,CAACD,IACD,SAAAb,GAAW,OAAIA,EACTe,OAAOC,KAAKhB,GAAaL,KAAI,SAAAC,GAAG,OAAII,EAAYJ,MAChD,MAGGqB,EAAmB,SAAAC,GAAkB,OAAIJ,YAClD,CAACD,IACD,SAAAb,GAAW,OAAIA,EACTA,EAAYkB,GACZ,SAGGb,EAA6BS,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKO,cAGJC,EAA4BN,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKZ,gB,oECpBJQ,IAPK,SAAAa,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAcD,EAAiB,6BACtE,OAAOC,EACD,kBAAC,IAAD,MACA,kBAACiB,EAAqBlB,M,gCCPhC,oDA8BeD,gBAAQ,MALI,SAAAoB,GAAQ,MAAK,CACpCC,QAAS,SAAA9B,GAAI,OAAI6B,EAASC,YAAQ9B,QAIvBS,EAxBQ,SAAC,GAAuB,IAArBT,EAAoB,EAApBA,KAAM8B,EAAc,EAAdA,QACrBC,EAAyB/B,EAAzB+B,KAAMC,EAAmBhC,EAAnBgC,MAAOC,EAAYjC,EAAZiC,SACpB,OACA,yBAAKtC,UAAU,mBACX,yBAAKA,UAAU,QACXuC,MAAO,CAAEC,gBAAgB,OAAD,OAASF,EAAT,QAE5B,yBAAKtC,UAAU,eACX,0BAAMA,UAAU,QAAQoC,GACxB,0BAAMpC,UAAU,SAAhB,IAA0BqC,IAE9B,kBAAC,IAAD,CACII,QAAS,kBAAMN,EAAQ9B,IACvBqC,UAAQ,GAFZ,oB","file":"static/js/4.d187c338.chunk.js","sourcesContent":["import React from 'react';\n\nimport './collection-preview.styles.scss';\nimport CollectionItem from '../collection-item/collection-item.component';\nimport { Link } from 'react-router-dom';\n\nconst CollectionPreview = ({ title, items, history }) => (\n    <div className='collection'>\n        <Link to={`/shop/${title.toLowerCase()}`}>\n            <h1 className='title'>{title.toUpperCase()}</h1>\n        </Link>\n        <div className='items-container'>\n            {items\n                .filter((item, i) => i < 4)\n                .map((item) =>\n                    <CollectionItem key={item.id} item={item} />\n                )\n            }\n\n        </div>\n    </div>\n)\n\nexport default CollectionPreview;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './collections-overview.styles.scss';\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\n\nconst CollectionsOverview = ({ collections }) => (\n    <div className='collection-overview'>\n        {collections.map(({ id, ...otherProps }) => \n            <CollectionPreview key={id} {...otherProps} />\n        )}\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n})\n\n\nexport default connect(mapStateToProps)(CollectionsOverview)","import { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFitching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFitching\n})\n\nconst CollectionOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner)\n    (CollectionsOverview)\n\n\nexport default CollectionOverviewContainer;","import { createSelector } from 'reselect';\n\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => collections \n        ? Object.keys(collections).map(key => collections[key])\n        : []\n)\n\nexport const selectCollection = collectionUrlParam => createSelector(\n    [selectCollections],\n    collections => collections\n        ? collections[collectionUrlParam]\n        : null\n)\n\nexport const selectIsCollectionFitching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)","import React from 'react';\nimport Spinner from '../spinner/spinner.component';\n\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n    return isLoading\n        ? <Spinner />\n        : <WrappedComponent {...otherProps} />\n}\n\n\nexport default WithSpinner;","import React from 'react';\nimport { connect } from 'react-redux';\nimport './collection-item.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nconst CollectionItem = ({ item, addItem }) => {\n    const {name, price, imageUrl} = item\n    return (\n    <div className='collection-item'>\n        <div className='image'\n            style={{ backgroundImage: `url(${imageUrl})` }} >\n        </div>\n        <div className='item-footer'>\n            <span className='name'>{name}</span>\n            <span className='price'>${price}</span>\n        </div>\n        <CustomButton \n            onClick={() => addItem(item)}\n            inverted >\n            Add to cart\n        </CustomButton>\n    </div>\n)}\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}