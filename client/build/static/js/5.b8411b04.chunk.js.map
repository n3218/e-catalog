{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-sign-up/sign-in-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setUserCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","isGoogleSignIn","onClick","signUpStart","displayName","confirmPassword","alert","SignInAndSignUpPage"],"mappings":"6RAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,mBIUvFC,G,OAZG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,MAAUC,EAA3B,+CACd,yBAAKC,UAAU,SACX,yCAAOA,UAAU,aAAaC,SAAUJ,GAAkBE,IACxDD,EACK,2BAAOE,UAAS,UAAKD,EAAWR,MAAMC,OACX,SAAW,GADtB,sBAC+CM,GAChE,Q,wBCuDCI,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACpCC,kBAAmB,kBAAMD,EAASC,gBAClCC,iBAAkB,SAACC,EAAOC,GAAR,OAAqBJ,EAASE,YAAiB,CAAEC,QAAOC,kBAI/DL,EAxDA,SAAC,GAA6C,IAA3CG,EAA0C,EAA1CA,iBAAkBD,EAAwB,EAAxBA,kBAAwB,IACVI,mBAAS,CAAEF,MAAO,GAAIC,SAAU,KADtB,GACjDE,EADiD,KAChCC,EADgC,KAEhDJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAETI,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sDACjBD,EAAME,iBACNT,EAAiBC,EAAOC,GAFP,2CAAH,sDAKZV,EAAe,SAAAe,GAAU,IAAD,EACFA,EAAMG,OAAtBC,EADkB,EAClBA,KAAMzB,EADY,EACZA,MACdmB,EAAmB,2BAAID,GAAL,kBAAuBO,EAAOzB,MAGpD,OACI,yBAAKS,UAAU,WACX,yDACA,sEAEA,0BAAMiB,SAAUN,GACZ,kBAAC,EAAD,CACIK,KAAK,QACLE,KAAK,QACLrB,aAAcA,EACdN,MAAOe,EACPR,MAAM,QACNqB,UAAQ,IACZ,kBAAC,EAAD,CACIH,KAAK,WACLE,KAAK,WACLrB,aAAcA,EACdN,MAAOgB,EACPT,MAAM,WACNqB,UAAQ,IACZ,yBAAKnB,UAAU,WACX,kBAAC,IAAD,CAAckB,KAAK,UAAnB,WAGA,kBAAC,IAAD,CACIA,KAAK,SACLE,gBAAc,EACdC,QAASjB,GAHb,6BC6BLF,G,OAAAA,YAAQ,MALI,SAAAC,GAAQ,MAAK,CACpCmB,YAAa,SAAAb,GAAe,OAAIN,EAASmB,YAAYb,QAI1CP,EApEA,SAAC,GAAqB,IAAnBoB,EAAkB,EAAlBA,YAAkB,IACcd,mBAAS,CACnDe,YAAa,GACbjB,MAAO,GACPC,SAAU,GACViB,gBAAiB,KALW,GACzBf,EADyB,KACRC,EADQ,KAOxBa,EAAkDd,EAAlDc,YAAajB,EAAqCG,EAArCH,MAAOC,EAA8BE,EAA9BF,SAAUiB,EAAoBf,EAApBe,gBAEhCb,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACjBD,EAAME,iBAEFP,IAAaiB,EAHA,uBAIbC,MAAM,yBAJO,0BAOjBH,EAAY,CAAEC,cAAajB,QAAOC,aAPjB,2CAAH,sDAUZV,EAAe,SAAAe,GAAU,IAAD,EACFA,EAAMG,OAAtBC,EADkB,EAClBA,KAAMzB,EADY,EACZA,MACdmB,EAAmB,2BAAID,GAAL,kBAAuBO,EAAOzB,MAGpD,OACI,yBAAKS,UAAU,WACX,wDACA,sEACA,0BAAMA,UAAU,eAAeiB,SAAUN,GACrC,kBAAC,EAAD,CACIO,KAAK,OACLF,KAAK,cACLzB,MAAOgC,EACPtB,SAAUJ,EACVC,MAAM,eACNqB,UAAQ,IACZ,kBAAC,EAAD,CACID,KAAK,QACLF,KAAK,QACLzB,MAAOe,EACPL,SAAUJ,EACVC,MAAM,QACNqB,UAAQ,IACZ,kBAAC,EAAD,CACID,KAAK,WACLF,KAAK,WACLzB,MAAOgB,EACPN,SAAUJ,EACVC,MAAM,WACNqB,UAAQ,IACZ,kBAAC,EAAD,CACID,KAAK,WACLF,KAAK,kBACLzB,MAAOiC,EACPvB,SAAUJ,EACVC,MAAM,mBACNqB,UAAQ,IACZ,kBAAC,IAAD,CAAcD,KAAK,UAAnB,iBCnDDQ,UARa,kBACxB,yBAAK1B,UAAU,mBACX,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"static/js/5.b8411b04.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n    <div className=\"group\">\n        <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n        { label\n            ? (<label className={`${otherProps.value.length \n                                        ? 'shrink' : ''} form-input-label`} >{label}</label>)\n            : null\n        }\n\n    </div >\n)\n\nexport default FormInput;","import React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from './../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n    const [userCredentials, setUserCredentials] = useState({ email: '', password: '' })\n    const { email, password } = userCredentials\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        emailSignInStart(email, password)\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target\n        setUserCredentials({...userCredentials, [name]: value })\n    }\n\n    return (\n        <div className='sign-in'>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    name=\"email\"\n                    type=\"email\"\n                    handleChange={handleChange}\n                    value={email}\n                    label=\"email\"\n                    required />\n                <FormInput\n                    name=\"password\"\n                    type=\"password\"\n                    handleChange={handleChange}\n                    value={password}\n                    label=\"password\"\n                    required />\n                <div className='buttons'>\n                    <CustomButton type=\"submit\">\n                        Sign In\n                        </CustomButton>\n                    <CustomButton\n                        type=\"button\"\n                        isGoogleSignIn\n                        onClick={googleSignInStart} >\n                        Sign In With Google\n                        </CustomButton>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\n\nexport default connect(null, mapDispatchToProps)(SignIn);","import React, { useState } from 'react'\nimport './sign-up.styles.scss'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { signUpStart } from '../../redux/user/user.actions'\nimport { connect } from 'react-redux'\n\nconst SignUp = ({ signUpStart }) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const { displayName, email, password, confirmPassword } = userCredentials\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords don't match\");\n            return;\n        }\n        signUpStart({ displayName, email, password })\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setUserCredentials({...userCredentials, [name]: value });\n    }\n\n    return (\n        <div className='sign-up'>\n            <h2>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='display name'\n                    required />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='email'\n                    required />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='password'\n                    required />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='confirm password'\n                    required />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\n\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from 'react';\nimport './sign-in-sign-up.styles.scss';\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nconst SignInAndSignUpPage = () => (\n    <div className='sign-in-sign-up'>\n        <SignIn />\n        <SignUp />\n    </div>\n\n)\n\nexport default SignInAndSignUpPage;\n\n"],"sourceRoot":""}