{"ast":null,"code":"import _regeneratorRuntime from\"/projects/udemy/e-catalog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSaga);import{takeLatest,call,put,all}from'redux-saga/effects';import ShopActionTypes from'./shop.types';import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';import{fetchCollectionsSuccess,fetchCollectionsFailure}from'./shop.actions';function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection('collections');_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionsMap=_context.sent;_context.next=10;return put(fetchCollectionsSuccess(collectionsMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchCollectionsFailure(_context.t0.message));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSaga(){return _regeneratorRuntime.wrap(function shopSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/projects/udemy/e-catalog/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSaga","takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"gMAMUA,qB,iDAWAC,qB,iDAOOC,Q,EAxBjB,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CACA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAASC,SAAT,CAAoBC,+BAApB,KAA2D,+BAA3D,CACA,OAASC,uBAAT,CAAkCC,uBAAlC,KAAiE,gBAAjE,CAGA,QAAUX,CAAAA,qBAAV,2LAEcY,aAFd,CAE8BJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAF9B,iBAGyB,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAHzB,OAGcC,QAHd,+BAI+B,MAAMX,CAAAA,IAAI,CAACK,+BAAD,CAAkCM,QAAlC,CAAV,CAJ/B,OAIcC,cAJd,gCAKQ,MAAMX,CAAAA,GAAG,CAACK,uBAAuB,CAACM,cAAD,CAAxB,CAAT,CALR,0GAOQ,MAAMX,CAAAA,GAAG,CAACM,uBAAuB,CAAC,YAAMM,OAAP,CAAxB,CAAT,CAPR,qEAWA,QAAUhB,CAAAA,qBAAV,qJACI,MAAME,CAAAA,UAAU,CACZI,eAAe,CAACW,uBADJ,CAEZlB,qBAFY,CAAhB,CADJ,wDAOA,MAAO,SAAUE,CAAAA,QAAV,wIACH,MAAMI,CAAAA,GAAG,CAAC,CACNF,IAAI,CAACH,qBAAD,CADE,CAAD,CAAT,CADG","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\n\nfunction* fetchCollectionsAsync() {\n    try {\n        const collectionRef = firestore.collection('collections')\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    } catch(error) {\n        yield put(fetchCollectionsFailure(error.message))\n    }\n}\n\nfunction* fetchCollectionsStart() {\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    )\n}\n\nexport function* shopSaga() {\n    yield all([\n        call(fetchCollectionsStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}