{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\n\nfunction* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nfunction* singInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nfunction* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nfunction* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nfunction* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, singInAfterSignUp);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/projects/udemy/e-catalog/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","additionalData","error","singInAfterSignUp","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,EAA0DC,cAA1D,QAAgF,+BAAhF;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,EAAuEC,aAAvE,EAAsFC,aAAtF,QAA2G,gBAA3G;;AAGA,UAAUC,MAAV,CAAiB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB;AAAX,CAAjB,EAAgE;AAC5D,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACgB,8BAAL,CAAoCJ,KAApC,EAA2CC,QAA3C,CAAvB;AACA,UAAMjB,GAAG,CAACa,aAAa,CAAC;AAAEM,MAAAA,IAAF;AAAQE,MAAAA,cAAc,EAAE;AAAEH,QAAAA;AAAF;AAAxB,KAAD,CAAd,CAAT;AAEH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACY,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUC,iBAAV,CAA4B;AAAER,EAAAA,OAAO,EAAE;AAAEI,IAAAA,IAAF;AAAQE,IAAAA;AAAR;AAAX,CAA5B,EAAmE;AAC/D,QAAMG,uBAAuB,CAACL,IAAD,EAAOE,cAAP,CAA7B;AACH;;AAED,UAAUG,uBAAV,CAAkCC,QAAlC,EAA4CJ,cAA5C,EAA4D;AACxD,MAAI;AACA,UAAMK,OAAO,GAAG,MAAMxB,IAAI,CAACI,yBAAD,EAA4BmB,QAA5B,EAAsCJ,cAAtC,CAA1B;AACA,UAAMM,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAM5B,GAAG,CAACQ,aAAa,CAAC;AAAEqB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACH,GAJD,CAIE,OAAOR,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUS,gBAAV,GAA6B;AACzB,MAAI;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAAC4B,eAAL,CAAqB3B,cAArB,CAAvB;AACA,UAAMmB,uBAAuB,CAACL,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUW,eAAV,CAA0B;AAAElB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACxD,MAAI;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAAC8B,0BAAL,CAAgClB,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMO,uBAAuB,CAACL,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUa,mBAAV,GAAgC;AAC5B,MAAI;AACA,UAAMV,QAAQ,GAAG,MAAMlB,cAAc,EAArC;AACA,QAAI,CAACkB,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACH,GAJD,CAIE,OAAOH,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUc,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMhC,IAAI,CAACgC,OAAL,EAAN;AACA,UAAMpC,GAAG,CAACW,cAAc,EAAf,CAAT;AACH,GAHD,CAGE,OAAOW,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACU,cAAc,EAAf,CAAT;AACH;AACJ;;AAGD,UAAU2B,mBAAV,GAAgC;AAC5B,QAAMtC,UAAU,CAACI,eAAe,CAACmC,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACH;;AAED,UAAUQ,kBAAV,GAA+B;AAC3B,QAAMxC,UAAU,CAACI,eAAe,CAACqC,mBAAjB,EAAsCP,eAAtC,CAAhB;AACH;;AAED,UAAUQ,kBAAV,GAA+B;AAC3B,QAAM1C,UAAU,CAACI,eAAe,CAACuC,kBAAjB,EAAqCP,mBAArC,CAAhB;AACH;;AAED,UAAUQ,cAAV,GAA2B;AACvB,QAAM5C,UAAU,CAACI,eAAe,CAACyC,cAAjB,EAAiCR,OAAjC,CAAhB;AACH;;AAED,UAAUS,aAAV,GAA0B;AACtB,QAAM9C,UAAU,CAACI,eAAe,CAAC2C,aAAjB,EAAgChC,MAAhC,CAAhB;AACH;;AAED,UAAUiC,eAAV,GAA4B;AACxB,QAAMhD,UAAU,CAACI,eAAe,CAAC6C,eAAjB,EAAkCzB,iBAAlC,CAAhB;AACH;;AAGD,OAAO,UAAU0B,SAAV,GAAsB;AACzB,QAAMhD,GAAG,CAAC,CACNC,IAAI,CAACmC,mBAAD,CADE,EAENnC,IAAI,CAACqC,kBAAD,CAFE,EAGNrC,IAAI,CAACuC,kBAAD,CAHE,EAINvC,IAAI,CAACyC,cAAD,CAJE,EAKNzC,IAAI,CAAC2C,aAAD,CALE,EAMN3C,IAAI,CAAC6C,eAAD,CANE,CAAD,CAAT;AAQH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions'\n\n\nfunction* signUp({ payload: { email, password, displayName } }) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        yield put(signUpSuccess({ user, additionalData: { displayName } }))\n\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nfunction* singInAfterSignUp({ payload: { user, additionalData } }) {\n    yield getSnapshotFromUserAuth(user, additionalData)\n}\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\n        const userSnapshot = yield userRef.get()\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nfunction* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider)\n        yield getSnapshotFromUserAuth(user)\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nfunction* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapshotFromUserAuth(user)\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nfunction* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser()\n        if (!userAuth) return\n        yield getSnapshotFromUserAuth(userAuth)\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nfunction* signOut() {\n    try {\n        yield auth.signOut()\n        yield put(signOutSuccess())\n    } catch (error) {\n        yield put(signOutFailure())\n    }\n}\n\n\nfunction* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nfunction* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nfunction* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nfunction* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nfunction* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nfunction* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, singInAfterSignUp)\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ])\n} \n"]},"metadata":{},"sourceType":"module"}