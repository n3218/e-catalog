{"ast":null,"code":"import _defineProperty from\"/projects/udemy/e-catalog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/projects/udemy/e-catalog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/projects/udemy/e-catalog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/projects/udemy/e-catalog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/projects/udemy/e-catalog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./sign-up.styles.scss';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{signUpStart as _signUpStart}from'../../redux/user/user.actions';import{connect}from'react-redux';var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:'',email:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var displayName=userCredentials.displayName,email=userCredentials.email,password=userCredentials.password,confirmPassword=userCredentials.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"Passwords don't match\");return _context.abrupt(\"return\");case 4:signUpStart({displayName:displayName,email:email,password:password});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserCredentials(_objectSpread(_objectSpread({},userCredentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sign-up\"},/*#__PURE__*/React.createElement(\"h2\",null,\"I do not have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign up with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"display name\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"password\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"confirm password\",required:true}),/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"SIGN UP\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/projects/udemy/e-catalog/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './sign-up.styles.scss'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { signUpStart } from '../../redux/user/user.actions'\nimport { connect } from 'react-redux'\n\nconst SignUp = ({ signUpStart }) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const { displayName, email, password, confirmPassword } = userCredentials\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords don't match\");\n            return;\n        }\n        signUpStart({ displayName, email, password })\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setUserCredentials({...userCredentials, [name]: value });\n    }\n\n    return (\n        <div className='sign-up'>\n            <h2>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='display name'\n                    required />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='email'\n                    required />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='password'\n                    required />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='confirm password'\n                    required />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}